do local KeyGuardLibrary=loadstring(game:HttpGet("https://cdn.keyguardian.org/library/v1.0.0.lua"))();local trueData="a145b2193a2a446287a213bf83315abc";local falseData="e9381f1d14c64ca586995cce166b9c6f";KeyGuardLibrary.Set({publicToken="8336ddf50c0746359b04047ff8e226f7",privateToken="5e4a1fecc29844db815b7e1740ed2279",trueData=trueData,falseData=falseData});local Fluent=loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))();local key="";local Window=Fluent:CreateWindow({Title="Key System",SubTitle="Zebux",TabWidth=160,Size=UDim2.fromOffset(580,340),Acrylic=false,Theme="Dark",MinimizeKey=Enum.KeyCode.LeftControl});local Tabs={KeySys=Window:AddTab({Title="Key System",Icon="key"})};local Entkey=Tabs.KeySys:AddInput("Input",{Title="Enter Key",Description="Enter Key Here",Default="",Placeholder="Enter keyâ€¦",Numeric=false,Finished=false,Callback=function(Value) key=Value;end});local Checkkey=Tabs.KeySys:AddButton({Title="Check Key",Description="Enter Key before pressing this button",Callback=function() local response=KeyGuardLibrary.validateDefaultKey(key);if (response==trueData) then Window:Destroy();for _,v in pairs(game.CoreGui:GetChildren()) do if v.Name:find("Fluent") then v:Destroy();end end local replicatedStorage=game:GetService("ReplicatedStorage");local players=game:GetService("Players");local player=players.LocalPlayer;local runService=game:GetService("RunService");local virtualUser=game:GetService("VirtualUser");local hatchEvent=replicatedStorage.Events.Eggs.Hatch;local isAutoHatchEnabled=false;local selectedEgg="Basic Egg";local hatchInterval=1;local eggs={"Basic Egg","Beach Egg","Crowned Egg","Crystal Egg","Egyptian Egg","Forest Egg","Garden Egg","Geode Egg","Hay Egg","Jungle Egg","Magical Egg","Molten Egg","Pirate Egg","Sakura Egg","Witch Egg"};local function autoHatch() spawn(function() while isAutoHatchEnabled do if selectedEgg then local eggObject=workspace.Eggs:FindFirstChild(selectedEgg);if eggObject then local args={[1]=eggObject,[2]=1};hatchEvent:FireServer(unpack(args));task.wait(hatchInterval);else warn("Selected egg not found in the workspace!");break;end else warn("No egg selected for hatching!");break;end end end);end local damageEvent=replicatedStorage.Events.Blocks.Damage;local detectionRadius=100000;local autoTriggerInterval=1;local selectedDigsite="Sakura Digsite";local triggerPosition=Vector3.new(39,3, -281);local detectionThreshold=10;local isAutoTriggerEnabled=false;local teleportLocations={Vector3.new(83,3, -314),Vector3.new(1146, -228, -309)};local isTeleportActive=false;local positionCheckEnabled=false;local antiAFKEnabled=false;local lastActivityTime=tick();local ANTI_AFK_INTERVAL=600;local digsites={"Beach Digsite","Crystal Caves Digsite","Dark Forest Digsite","Enchanted Digsite","Farm Digsite","Forest Digsite","Garden Digsite","Jungle Digsite","Kingdom Digsite","Magical Digsite","Pirate Cove Digsite","Pyramids Digsite","Sakura Digsite","VIP Digsite","Volcano Digsite","Pyramid Minigame"};local function simulateActivity() virtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame);task.wait(0.1);virtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame);end local function updateLastActivityTime() lastActivityTime=tick();end local function startAntiAFK() spawn(function() while antiAFKEnabled do local currentTime=tick();if ((currentTime-lastActivityTime)>=ANTI_AFK_INTERVAL) then simulateActivity();updateLastActivityTime();end task.wait(1);end end);end local function setupAntiAFKTracking() local character=player.Character or player.CharacterAdded:Wait() ;local humanoid=character:WaitForChild("Humanoid");humanoid.Running:Connect(function() if antiAFKEnabled then updateLastActivityTime();end end);player.CharacterAdded:Connect(function(newCharacter) local newHumanoid=newCharacter:WaitForChild("Humanoid");newHumanoid.Running:Connect(function() if antiAFKEnabled then updateLastActivityTime();end end);end);end local function teleportPlayer(location) local character=player.Character;if (character and character:FindFirstChild("HumanoidRootPart")) then character.HumanoidRootPart.CFrame=CFrame.new(location);else warn("Character or HumanoidRootPart not found!");end end local function waitForCharacterToLoad() local character=player.Character or player.CharacterAdded:Wait() ;while  not character:FindFirstChild("HumanoidRootPart") do task.wait(0.1);end end local function initialSequentialTeleport() teleportPlayer(teleportLocations[1]);task.wait(1);teleportPlayer(teleportLocations[2]);waitForCharacterToLoad();end local function sequentialTeleport() for _,location in ipairs(teleportLocations) do teleportPlayer(location);if (location==teleportLocations[2]) then waitForCharacterToLoad();end task.wait(1);end end local lastTeleportTime=0;local cooldownTime=2;local function checkPosition() local character=player.Character;if (character and character:FindFirstChild("HumanoidRootPart")) then local rootPart=character.HumanoidRootPart;local distance=(rootPart.Position-triggerPosition).Magnitude;local currentTime=tick();if ((distance<=detectionThreshold) and positionCheckEnabled and ((currentTime-lastTeleportTime)>=cooldownTime)) then lastTeleportTime=currentTime;sequentialTeleport();end end end local isAutoJumpEnabled=false;local function autoJump() spawn(function() while isAutoJumpEnabled do local character=player.Character;if (character and character:FindFirstChild("Humanoid")) then local humanoid=character.Humanoid;humanoid:ChangeState(Enum.HumanoidStateType.Jumping);end task.wait(5);end end);end runService.Heartbeat:Connect(checkPosition);local function getBlocksWithinRadius(center,radius) if  not selectedDigsite then warn("No digsite selected!");return {};end local digsite=workspace.BlockRegions:FindFirstChild(selectedDigsite);if  not digsite then warn("Selected digsite not found!");return {};end local blocksInRange={};for _,obj in ipairs(digsite:GetDescendants()) do if (obj:IsA("Model") and obj:FindFirstChild("Core")) then local corePart=obj.Core;if ((corePart.Position-center).Magnitude<=radius) then table.insert(blocksInRange,obj);end end end return blocksInRange;end local function damageBlocks(blocks) for _,block in ipairs(blocks) do for _=1,10 do damageEvent:FireServer(block);task.wait(0.1);end end end local function autoTrigger() spawn(function() while isAutoTriggerEnabled do local character=player.Character;if (character and character:FindFirstChild("HumanoidRootPart")) then local playerPosition=character.HumanoidRootPart.Position;local blocks=getBlocksWithinRadius(playerPosition,detectionRadius);damageBlocks(blocks);end task.wait(autoTriggerInterval);end end);end runService.Heartbeat:Connect(updateGemIndicator);local DiscordLib=loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/discord"))();local win=DiscordLib:Window("Mining Simulator");local serv=win:Server("Main","");local miningChannel=serv:Channel("Auto Mining");local hatchingChannel=serv:Channel("Egg Hatching");local teleportChannel=serv:Channel("Minigame");local utilityChannel=serv:Channel("Utility");utilityChannel:Toggle("Enable Magnet",false,function(bool) isMagnetEnabled=bool;if isMagnetEnabled then local magnetValue=game.Players.LocalPlayer.upgrades.Magnet;magnetValue.Value=1000000;activateMagnet();DiscordLib:Notification("Magnet Enabled","Magnet is now active. Items within "   .. magnetRadius   .. " studs will be collected." ,"Okay!");else local magnetValue=game.Players.LocalPlayer.upgrades.Magnet;magnetValue.Value=1;DiscordLib:Notification("Magnet Disabled","Magnet functionality has been turned off.","Okay!");end end);miningChannel:Dropdown("Select Digsite",digsites,function(value) selectedDigsite=value;DiscordLib:Notification("Digsite Selected","Changed to: "   .. value ,"Okay!");end);miningChannel:Toggle("Auto Dig",false,function(bool) isAutoTriggerEnabled=bool;if isAutoTriggerEnabled then autoTrigger();end saveConfig();end);miningChannel:Toggle("Dig faster",false,function(bool) isSpeedEnabled=bool;if isSpeedEEnabled then local MinespeedValue=game.Players.LocalPlayer.upgrades.MineSpeed;MinespeedValue.Value=0.001;activateSpeed();else local MinespeedValue=game.Players.LocalPlayer.upgrades.MineSpeed;MinespeedValue.Value=0.001;saveConfig();end end);hatchingChannel:Dropdown("Select Egg",eggs,function(value) selectedEgg=value;DiscordLib:Notification("Egg Selected","Changed to: "   .. value ,"Okay!");saveConfig();end);hatchingChannel:Toggle("Auto Hatch",false,function(bool) isAutoHatchEnabled=bool;if isAutoHatchEnabled then autoHatch();DiscordLib:Notification("Auto Hatch","Auto Hatch enabled - Hatching "   .. selectedEgg   .. " continuously." ,"Okay!");saveConfig();else DiscordLib:Notification("Auto Hatch","Auto Hatch disabled.","Okay!");end saveConfig();end);teleportChannel:Toggle("Auto Pyramid Game",false,function(bool) positionCheckEnabled=bool;if bool then spawn(function() initialSequentialTeleport();end);end DiscordLib:Notification("Position Detection",(bool and "Enabled - Will teleport when near position (39, 3, -281)") or "Disabled" ,"Okay!");saveConfig();end);utilityChannel:Toggle("Anti-AFK",false,function(bool) antiAFKEnabled=bool;if bool then startAntiAFK();setupAntiAFKTracking();DiscordLib:Notification("Anti-AFK","Anti-AFK system enabled - Will prevent kicks","Okay!");saveConfig();else DiscordLib:Notification("Anti-AFK","Anti-AFK system disabled","Okay!");end saveConfig();end);utilityChannel:Toggle("Auto Jump",false,function(bool) isAutoJumpEnabled=bool;if isAutoJumpEnabled then autoJump();DiscordLib:Notification("Auto Jump","Auto Jump enabled - The player will jump continuously.","Okay!");else DiscordLib:Notification("Auto Jump","Auto Jump disabled.","Okay!");end end);setupAntiAFKTracking();local ReplicatedStorage=game:GetService("ReplicatedStorage");local CollectEvent=ReplicatedStorage.Events.Drops.Collect;local Players=game:GetService("Players");local player=Players.LocalPlayer;local PlayerGui=player:WaitForChild("PlayerGui");local ScreenGui=Instance.new("ScreenGui");ScreenGui.Name="GemStatsGui";ScreenGui.ResetOnSpawn=false;ScreenGui.Parent=PlayerGui;local MainFrame=Instance.new("Frame");MainFrame.Name="StatsFrame";MainFrame.Size=UDim2.new(0,200,0,160);MainFrame.Position=UDim2.new(0.8,0,0.3,0);MainFrame.BackgroundColor3=Color3.fromRGB(40,40,40);MainFrame.BackgroundTransparency=0.2;MainFrame.BorderSizePixel=0;MainFrame.Parent=ScreenGui;local UICorner=Instance.new("UICorner");UICorner.CornerRadius=UDim.new(0,8);UICorner.Parent=MainFrame;local Title=Instance.new("TextLabel");Title.Name="Title";Title.Size=UDim2.new(1,0,0,30);Title.Position=UDim2.new(0,0,0,0);Title.BackgroundColor3=Color3.fromRGB(60,60,60);Title.BackgroundTransparency=0.5;Title.BorderSizePixel=0;Title.Font=Enum.Font.GothamBold;Title.Text="Gem Stats";Title.TextColor3=Color3.fromRGB(255,255,255);Title.TextSize=14;Title.Parent=MainFrame;local TitleCorner=Instance.new("UICorner");TitleCorner.CornerRadius=UDim.new(0,8);TitleCorner.Parent=Title;local CloseButton=Instance.new("TextButton");CloseButton.Name="CloseButton";CloseButton.Size=UDim2.new(0,20,0,20);CloseButton.Position=UDim2.new(1, -25,0,5);CloseButton.BackgroundColor3=Color3.fromRGB(255,85,85);CloseButton.Font=Enum.Font.GothamBold;CloseButton.Text="X";CloseButton.TextColor3=Color3.fromRGB(255,255,255);CloseButton.TextSize=14;CloseButton.Parent=MainFrame;local CloseButtonCorner=Instance.new("UICorner");CloseButtonCorner.CornerRadius=UDim.new(0,4);CloseButtonCorner.Parent=CloseButton;CloseButton.MouseButton1Click:Connect(function() MainFrame.Visible=false;end);local StatsContainer=Instance.new("Frame");StatsContainer.Name="StatsContainer";StatsContainer.Size=UDim2.new(1, -20,1, -40);StatsContainer.Position=UDim2.new(0,10,0,35);StatsContainer.BackgroundTransparency=1;StatsContainer.Parent=MainFrame;local function createStatLabel(name,position) local label=Instance.new("TextLabel");label.Name=name;label.Size=UDim2.new(1,0,0,25);label.Position=UDim2.new(0,0,position,0);label.BackgroundTransparency=1;label.Font=Enum.Font.Gotham;label.TextColor3=Color3.fromRGB(255,255,255);label.TextSize=12;label.TextXAlignment=Enum.TextXAlignment.Left;label.Parent=StatsContainer;return label;end local totalGemsLabel=createStatLabel("TotalGems",0);local gemsPerHourLabel=createStatLabel("GemsPerHour",0.25);local runTimeLabel=createStatLabel("RunTime",0.5);local lastGemLabel=createStatLabel("LastGem",0.75);local UserInputService=game:GetService("UserInputService");local dragging;local dragInput;local dragStart;local startPos;local function updateDrag(input) local delta=input.Position-dragStart ;MainFrame.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset + delta.X ,startPos.Y.Scale,startPos.Y.Offset + delta.Y );end Title.InputBegan:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseButton1) or (input.UserInputType==Enum.UserInputType.Touch)) then dragging=true;dragStart=input.Position;startPos=MainFrame.Position;input.Changed:Connect(function() if (input.UserInputState==Enum.UserInputState.End) then dragging=false;end end);end end);Title.InputChanged:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseMovement) or (input.UserInputType==Enum.UserInputType.Touch)) then dragInput=input;end end);UserInputService.InputChanged:Connect(function(input) if ((input==dragInput) and dragging) then updateDrag(input);end end);local stats={totalGems=0,startTime=tick(),lastMinuteGems={},lastGemId="None"};local function calculateGemsPerHour() local currentTime=tick();local oneMinuteAgo=currentTime-60 ;for i= #stats.lastMinuteGems,1, -1 do if (stats.lastMinuteGems[i].time<oneMinuteAgo) then table.remove(stats.lastMinuteGems,i);end end return  #stats.lastMinuteGems * 60 ;end local function formatTime(seconds) local minutes=math.floor(seconds/60 );local hours=math.floor(minutes/60 );seconds=seconds%60 ;minutes=minutes%60 ;return string.format("%02d:%02d:%02d",hours,minutes,seconds);end local function updateUI() local gemsPerHour=calculateGemsPerHour();local runTime=math.floor(tick() -stats.startTime );totalGemsLabel.Text="Total Gems: "   .. stats.totalGems ;gemsPerHourLabel.Text="Gems/Hour: "   .. gemsPerHour ;runTimeLabel.Text="Run Time: "   .. formatTime(runTime) ;lastGemLabel.Text="Last Gem ID: "   .. stats.lastGemId ;end local oldNameCall=getrawmetatable(game).__namecall;setreadonly(getrawmetatable(game),false);getrawmetatable(game).__namecall=newcclosure(function(self,...) local method=getnamecallmethod();local args={...};if ((self==CollectEvent) and (method=="FireServer")) then stats.totalGems=stats.totalGems + 1 ;stats.lastGemId=tostring(args[1]);table.insert(stats.lastMinuteGems,{time=tick(),id=args[1]});updateUI();end return oldNameCall(self,...);end);setreadonly(getrawmetatable(game),true);local HttpService=game:GetService("HttpService");local config={autoDigEnabled=false,autoHatchEnabled=false,selectedEgg="Basic Egg",selectedDigsite="Sakura Digsite",antiAFKEnabled=false,autoJumpEnabled=false,magnetEnabled=false,positionCheckEnabled=false};local function saveConfig() local json=HttpService:JSONEncode(config);writefile("MiningSimulatorConfig.json",json);print("Configuration saved!");end local function loadConfig() local success,err=pcall(function() if isfile("MiningSimulatorConfig.json") then local json=readfile("MiningSimulatorConfig.json");config=HttpService:JSONDecode(json);print("Configuration loaded!");else print("No configuration file found. Using default settings.");end end);if  not success then warn("Failed to load configuration: "   .. err );end end local function applyConfig() if config.autoDigEnabled then isAutoTriggerEnabled=true;autoTrigger();end if config.autoHatchEnabled then isAutoHatchEnabled=true;autoHatch();end if config.antiAFKEnabled then antiAFKEnabled=true;startAntiAFK();setupAntiAFKTracking();end end loadConfig();applyConfig();local oldNameCall=getrawmetatable(game).__namecall;setreadonly(getrawmetatable(game),false);getrawmetatable(game).__namecall=newcclosure(function(self,...) local method=getnamecallmethod();local args={...};if ((self==CollectEvent) and (method=="FireServer")) then stats.totalGems=stats.totalGems + 1 ;stats.lastGemId=tostring(args[1]);table.insert(stats.lastMinuteGems,{time=tick(),id=args[1]});updateUI();end return oldNameCall(self,...);end);setreadonly(getrawmetatable(game),true);spawn(function() while wait(1) do updateUI();end end);else Fluent:Notify({Title="Invalid Key",Content="The key you entered is incorrect.",Duration=5});end end});local Getkey=Tabs.KeySys:AddButton({Title="Get Key",Description="Get Key here",Callback=function() setclipboard(KeyGuardLibrary.getLink());end});Window:SelectTab(1); end
